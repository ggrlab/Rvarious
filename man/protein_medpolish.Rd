% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/protein_medpolish.R
\name{protein_medpolish}
\alias{protein_medpolish}
\title{Median polish to summarize proteins}
\usage{
protein_medpolish(peptidematrix, peptide_protein_affiliation,
  previous_MP_params = NULL, overall_Included = TRUE, na.rm = TRUE,
  return.completeMP = FALSE)
}
\arguments{
\item{peptidematrix}{A matrix with rows=peptides and cols=samples}

\item{peptide_protein_affiliation}{A vector of length nrow(peptidematrix) which holds the protein-names of the
corresponding peptide in the peptidematrix}

\item{previous_MP_params}{a named list with "featurefactors" and "overalleffects" given.
Can also be directly a previous returnvalue of this function}

\item{overall_Included}{should the overall effect be included in the final protein values?}

\item{na.rm}{Should NAs be removed?}

\item{return.completeMP}{Should the median polish result per protein be returned}
}
\value{
A named list
\describe{
\item{protein.values}{proteinmat}
\item{featurefactors}{featurefactors}
\item{overalleffects}{overalleffects)}
}
}
\description{
Median polish to summarize proteins from multiple peptides
}
\examples{
ncol=10
nrow=15
examplemat <- matrix(rnorm(ncol*nrow), ncol=ncol, nrow=nrow)
rownames(examplemat) <- paste0("peptide", 1:nrow)
colnames(examplemat) <- paste0("sample", 1:ncol)
protein_affiliations <- c(rep("Protein1", 5)
						  ,rep("Protein2", 3)
						  ,rep("Protein3", 2)
						  ,rep("Protein4", 5))
tmp <- protein_medpolish(peptidematrix = examplemat
						 ,peptide_protein_affiliation = protein_affiliations
						 ,previous_MP_params = NULL
						 ,overall_Included = TRUE
						 ,na.rm = TRUE)
tmp$protein.values
tmp2 <- protein_medpolish(peptidematrix = examplemat
						  ,peptide_protein_affiliation = protein_affiliations
						  ,previous_MP_params = tmp
						  ,overall_Included = TRUE
						  ,na.rm = TRUE)
tmp2$protein.values
summary(c(tmp$protein.values - tmp2$protein.values)) # almost zero, done.



tmp <- protein_medpolish(peptidematrix = examplemat
						 ,peptide_protein_affiliation = protein_affiliations
						 ,previous_MP_params = NULL
						 ,overall_Included = TRUE
						 ,na.rm = TRUE
						 ,return.completeMP=TRUE)
}
